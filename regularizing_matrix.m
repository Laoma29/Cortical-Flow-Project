function [regularizer, gradientBasis, tangentPlaneBasisCell, ...
  tangentPlaneBasis, triangleAreas, FaceNormals, ...
  sparseIndex1,sparseIndex2] = ...
  regularizing_matrix(Faces, Vertices, VertNormals, dimension)

nVertices = size(Vertices,1); % Number of nodes
[gradientBasis, triangleAreas, FaceNormals] = ...
  geometry_tesselation(Faces, Vertices, dimension);

% Basis of the tangent plane at each vertex
tangentPlaneBasis = basis_vertices(VertNormals);
tangentPlaneBasisCell = cell(2,3); % similar structure to gradientBasis
% 2 = # of basis vectors, 3 = # of nodes in each element (triangle)

tangentPlaneBasisCell{1,1} = tangentPlaneBasis(Faces(:,1),:,1);
tangentPlaneBasisCell{1,2} = tangentPlaneBasis(Faces(:,2),:,1);
tangentPlaneBasisCell{1,3} = tangentPlaneBasis(Faces(:,3),:,1);

tangentPlaneBasisCell{2,1} = tangentPlaneBasis(Faces(:,1),:,2);
tangentPlaneBasisCell{2,2} = tangentPlaneBasis(Faces(:,2),:,2);
tangentPlaneBasisCell{2,3} = tangentPlaneBasis(Faces(:,3),:,2);

  
sparseIndex1 = [Faces(:,1) Faces(:,1) Faces(:,2)];
sparseIndex2 = [Faces(:,2) Faces(:,3) Faces(:,3)];
gradientBasisSum = [sum(gradientBasis{1}.*gradientBasis{2},2) ...
  sum(gradientBasis{1}.*gradientBasis{3},2) ...
  sum(gradientBasis{2}.*gradientBasis{3},2)];

tang_scal_11 = [ ...
  sum(tangentPlaneBasisCell{1,1}.*tangentPlaneBasisCell{1,2},2) ...
  sum(tangentPlaneBasisCell{1,1}.*tangentPlaneBasisCell{1,3},2) ...
  sum(tangentPlaneBasisCell{1,2}.*tangentPlaneBasisCell{1,3},2) ...
  ] .* gradientBasisSum .* repmat(triangleAreas, [1 3]);
tang_scal_12 = [ ...
  sum(tangentPlaneBasisCell{1,1}.*tangentPlaneBasisCell{2,2},2) ...
  sum(tangentPlaneBasisCell{1,1}.*tangentPlaneBasisCell{2,3},2) ...
  sum(tangentPlaneBasisCell{1,2}.*tangentPlaneBasisCell{2,3},2) ...
  ] .* gradientBasisSum .* repmat(triangleAreas, [1 3]);
tang_scal_21 = [ ...
  sum(tangentPlaneBasisCell{2,1}.*tangentPlaneBasisCell{1,2},2) ...
  sum(tangentPlaneBasisCell{2,1}.*tangentPlaneBasisCell{1,3},2) ...
  sum(tangentPlaneBasisCell{2,2}.*tangentPlaneBasisCell{1,3},2) ...
  ] .* gradientBasisSum .* repmat(triangleAreas, [1 3]);
tang_scal_22 = [ ...
  sum(tangentPlaneBasisCell{2,1}.*tangentPlaneBasisCell{2,2},2) ...
  sum(tangentPlaneBasisCell{2,1}.*tangentPlaneBasisCell{2,3},2) ...
  sum(tangentPlaneBasisCell{2,2}.*tangentPlaneBasisCell{2,3},2) ...
  ] .* gradientBasisSum .* repmat(triangleAreas, [1 3]);

termes_diag = repmat(triangleAreas, [1 3]) .* [ ...
  sum(gradientBasis{1}.^2,2) ...
  sum(gradientBasis{2}.^2,2) ...
  sum(gradientBasis{3}.^2,2) ]; 

D = sparse(Faces, Faces, termes_diag, nVertices, nVertices);
E11=sparse(sparseIndex1, sparseIndex2, tang_scal_11, nVertices, nVertices);
E11=E11+E11'+D;
E22=sparse(sparseIndex1,sparseIndex2,tang_scal_22,nVertices,nVertices);
E22=E22+E22'+D;
E12=sparse(sparseIndex1,sparseIndex2,tang_scal_12,nVertices,nVertices);
E21=sparse(sparseIndex1,sparseIndex2,tang_scal_21,nVertices,nVertices);

regularizer = [E11 E12+E21'; ...
               E12'+E21 E22];

end
