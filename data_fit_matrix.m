function [dataFit, B] = data_fit_matrix(Faces, nVertices, ...
  gradientBasis, triangleAreas, tangentPlaneBasisCell, F, dF, ...
  dimension, sparseIndex1, sparseIndex2)
grad_F = repmat(F(Faces(:,1)), 1, dimension) .* gradientBasis{1} ...
  + repmat(F(Faces(:,2)), 1, dimension) .* gradientBasis{2} ...
  + repmat(F(Faces(:,3)), 1, dimension) .* gradientBasis{3};

% Projection of the gradient of F on the tangent space
P_grad_F=cell(1,3); % same structure as gradientBasis : size = nFaces,3 ;
for s=1:3
    for k=1:2
       P_grad_F{s}(:,k)=sum(grad_F.*tangentPlaneBasisCell{k,s},2);
    end
end


B = zeros(2*nVertices, 1);
for k = 1:2
   for s = 1:3
     B(Faces(:,s)+(k-1)*nVertices) = ...
       B(Faces(:,s)+(k-1)*nVertices) + ...
       (-1/12 * triangleAreas .* (P_grad_F{s}(:,k)) .* (dF(Faces(:,s))+sum(dF(Faces),2)));
   end
end



scal_F_11 = [ ...
  P_grad_F{1}(:,1).*P_grad_F{2}(:,1) ...
  P_grad_F{1}(:,1).*P_grad_F{3}(:,1) ...
  P_grad_F{2}(:,1).*P_grad_F{3}(:,1) ...
  ] .* repmat(triangleAreas, [1 3])/12;
scal_F_12 = [ ...
  P_grad_F{1}(:,1).*P_grad_F{2}(:,2) ...
  P_grad_F{1}(:,1).*P_grad_F{3}(:,2) ...
  P_grad_F{2}(:,1).*P_grad_F{3}(:,2) ...
  ] .* repmat(triangleAreas, [1 3])/12;
scal_F_21 = [ ...
  P_grad_F{1}(:,2).*P_grad_F{2}(:,1) ...
  P_grad_F{1}(:,2).*P_grad_F{3}(:,1) ...
  P_grad_F{2}(:,2).*P_grad_F{3}(:,1) ...
  ] .* repmat(triangleAreas, [1 3])/12;
scal_F_22 = [ ...
  P_grad_F{1}(:,2).*P_grad_F{2}(:,2) ...
  P_grad_F{1}(:,2).*P_grad_F{3}(:,2) ...
  P_grad_F{2}(:,2).*P_grad_F{3}(:,2) ...
  ] .* repmat(triangleAreas, [1 3])/12;

scal_F_diag_11 = [ ...
  P_grad_F{1}(:,1).*P_grad_F{1}(:,1) ...
  P_grad_F{2}(:,1).*P_grad_F{2}(:,1) ...
  P_grad_F{3}(:,1).*P_grad_F{3}(:,1) ...
  ] .* repmat(triangleAreas, [1 3])/6;
scal_F_diag_22 = [ ...
  P_grad_F{1}(:,2).*P_grad_F{1}(:,2) ...
  P_grad_F{2}(:,2).*P_grad_F{2}(:,2) ...
  P_grad_F{3}(:,2).*P_grad_F{3}(:,2) ...
  ] .* repmat(triangleAreas, [1 3])/6;
scal_F_diag_12 = [ ...
  P_grad_F{1}(:,1).*P_grad_F{1}(:,2) ...
  P_grad_F{2}(:,1).*P_grad_F{2}(:,2) ...
  P_grad_F{3}(:,1).*P_grad_F{3}(:,2) ...
  ] .* repmat(triangleAreas, [1 3])/6;

S11=sparse(sparseIndex1, sparseIndex2, scal_F_11, nVertices, nVertices);
S22=sparse(sparseIndex1, sparseIndex2, scal_F_22, nVertices, nVertices);
S12=sparse(sparseIndex1, sparseIndex2, scal_F_12, nVertices, nVertices);
S21=sparse(sparseIndex1, sparseIndex2, scal_F_21, nVertices, nVertices);

D11=sparse(Faces, Faces, scal_F_diag_11, nVertices, nVertices); 
D22=sparse(Faces, Faces, scal_F_diag_22, nVertices, nVertices);
D12=sparse(Faces, Faces, scal_F_diag_12, nVertices, nVertices);

dataFit = [S11+S11'+D11 S12+S21'+D12; ...
  S12'+S21+D12 S22+S22'+D22];

end
